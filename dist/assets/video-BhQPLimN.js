import{F as p}from"./types-KFQB6SzD.js";const g=e=>new Promise((t,i)=>{const o=new FileReader;o.onload=()=>{const{result:a}=o;a instanceof ArrayBuffer?t(new Uint8Array(a)):t(new Uint8Array)},o.onerror=a=>{var r,l;i(Error(`File could not be read! Code=${((l=(r=a==null?void 0:a.target)==null?void 0:r.error)==null?void 0:l.code)||-1}`))},o.readAsArrayBuffer(e)}),c=async e=>{let t;if(typeof e=="string")/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(e)?t=atob(e.split(",")[1]).split("").map(i=>i.charCodeAt(0)):t=await(await fetch(e)).arrayBuffer();else if(e instanceof URL)t=await(await fetch(e)).arrayBuffer();else if(e instanceof File||e instanceof Blob)t=await g(e);else return new Uint8Array;return new Uint8Array(t)};document.getElementById("toHome").addEventListener("click",()=>{window.location.href="index.html"});document.getElementById("toVideoMaker").addEventListener("click",()=>{window.location.href="video.html"});const n=new p({log:!0,corePath:"/node_modules/@ffmpeg/core-mt/dist/ffmpeg-core.js"}),d=document.getElementById("status"),w=async()=>{d.textContent="Loading FFmpeg...",await n.load(),d.textContent="Ready!"};w();document.getElementById("combineBtn").addEventListener("click",async()=>{const e=document.getElementById("audioUploader"),t=document.getElementById("imageUploader"),i=document.querySelector(".download-link");if(e.files.length===0){alert("Please select an audio file.");return}const o=e.files[0];if(!o.type.startsWith("audio/")){alert("Please upload a valid audio file!"),e.value="";return}if(t.files.length===0){alert("Please select an image file.");return}const a=t.files[0];if(!a.type.startsWith("image/")){alert("Please upload a valid image file!"),t.value="";return}d.textContent="Combining...",await(await fetch(URL.createObjectURL(o))).arrayBuffer(),await(await fetch(URL.createObjectURL(a))).arrayBuffer(),await n.writeFile("image.jpg",await c(a)),await n.writeFile("audio.mp3",await c(o)),n.on("log",({message:s})=>{console.log("FFmpeg log:",s)}),await n.exec(["-loop","1","-i","image.jpg","-i","audio.mp3","-c:v","libx264","-tune","stillimage","-c:a","aac","-b:a","8k","-pix_fmt","yuv420p","-threads","4","-shortest","output.mp4"]),n.on("progress",({progress:s})=>{console.log(`Progress: ${(s*100).toFixed(2)}%`)});const m=await n.readFile("output.mp4"),u=new Blob([m.buffer],{type:"video/mp4"}),f=URL.createObjectURL(u);i.href=f,i.download="output.mp4",i.textContent="Download Your Video!"});
